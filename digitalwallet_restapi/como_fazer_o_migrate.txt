Para que haja mais performance no sistema, 
é melhor que existam duas base de dadOs em que uma vai guardar os dados temporarios que necessitam de validacao.
Assim sendo, a migração dos models com prefixo Temp vao para a base de dados temporaria e sairam de lá até que sejam
validados.

Para a migracao, será necessário executar os seguintes comandos em sequencia:

python3 manage.py makemigrations utilizador
python3 manage.py makemigrations agente
python3 manage.py makemigrations cliente
python3 manage.py makemigrations conta
python3 manage.py makemigrations operacao
python3 manage.py makemigrations deposito
python3 manage.py makemigrations levantamento
python3 manage.py makemigrations transferencia


Primeiro, deve-se migrar os modelos das aplicacoes defauls do django que são :
admin, auth, authtoken, contenttypes, sessions


python3 manage.py migrate --database=default admin
python3 manage.py migrate --database=default auth
python3 manage.py migrate --database=default authtoken
python3 manage.py migrate --database=default contenttypes
python3 manage.py migrate --database=default sessions


Em seguida, as demais apps do sistema:

python3 manage.py migrate --database=default utilizador
python3 manage.py migrate --database=default agente
python3 manage.py migrate --database=default cliente
python3 manage.py migrate --database=default conta
python3 manage.py migrate --database=default operacao
python3 manage.py migrate --database=default deposito
python3 manage.py migrate --database=default levantamento
python3 manage.py migrate --database=default transferencia
...
python3 manage.py migrate --database=otp_dbtemp opt_module   #para mover para base de dados temporaria

com tudo feito, já se criar o superusuario:
python3 manage.py createsuperuser --database=default   #Vai usar a base de dados default por não especificar (Vai reclamar que uma migração de opt_module não foi feita, mas é só ignorar)
